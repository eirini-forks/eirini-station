#!/bin/bash

bold=$(printf "\033[1m")
normal=$(printf "\033[0m")
red=$(printf "\033[31m")
yellow=$(printf "\033[33m")

readonly SCRIPT_DIR="$(cd -P "$(dirname $(readlink "${BASH_SOURCE[0]}"))" >/dev/null 2>&1 && pwd)"
readonly EIRINI_STATION_USERNAME="${EIRINI_STATION_USERNAME:-$(whoami)}"

USAGE=$(
  cat <<EOF
Usage: pair-connect [options]
Options:
  -a  address of station to connect to. Required. Ask your pair to run 'pssh' on their station and send you the output.
  -p  the ssh port of the station you are connecting to. Defaults to 22.
  -i  install pair-connect in /usr/local/bin
  -h  this help
Environment variables:
  EIRINI_STATION_USERNAME: your username. Used to uniquely name your gpg socket on the remote end. Defaults to the OS user
Examples:
  pair-connect -a user1@127.0.0.1
  EIRINI_STATION_USERNAME=johndoe pair-connect -a user1@127.0.0.1
  pair-connect -i

EOF
)

connect() {
  local station_user station_host username ssh_port
  station_user="$1"
  station_host="$2"
  username="$3"
  ssh_port="$4"

  ssh -A -R /home/"$station_user"/.gnupg/S.gpg-agent-"$username":$HOME/.gnupg/S.gpg-agent.extra -p "$ssh_port" "$station_user@$station_host"
}

main() {
  local station_name username station_address ssh_port
  ssh_port=22
  station_name=""
  station_address=""
  username=""

  while getopts "iha:p:" opt; do
    case ${opt} in
      a)
        station_address="$OPTARG"
        ;;
      p)
        ssh_port="$OPTARG"
        ;;
      i)
        echo "Installing pair-connect in /usr/local/bin. Sudo password may be required..."
        sudo ln -s "$SCRIPT_DIR/pair-connect" /usr/local/bin/pair-connect
        echo "pair-connect installed in /usr/local/bin"
        exit 1
        ;;
      h)
        cat "$SCRIPT_DIR/pair-connect.ascii"
        echo "$USAGE"
        exit 0
        ;;
      \?)
        echo "${bold}${red}Invalid option: ${OPTARG}${normal}" 1>&2
        cat "$SCRIPT_DIR/pair-connect.ascii"
        echo "$USAGE"
        exit 1
        ;;
      :)
        echo "${bold}${red}Invalid option: $OPTARG requires an argument${normal}" 1>&2
        cat "$SCRIPT_DIR/pair-connect.ascii"
        echo "$USAGE"
        exit 1
        ;;
    esac
  done
  shift $((OPTIND - 1))

  if [[ -z "$station_address" ]]; then
    echo "${bold}${red}Station address is required to connect.${normal}"
    echo "${bold}${red}Please supply the address of the station that you want to connect to!${normal}"
    echo "${bold}${red}Ask your pair to run 'pssh' on their station and send you the output.${normal}"
    echo
    echo "$USAGE"
    exit 1
  fi

  if [[ -z "$username" ]]; then
    if [[ -z "$EIRINI_STATION_USERNAME" ]]; then
      echo "${bold}${red}Username required to connect.${normal}"
      echo "${bold}${red}Please supply your eirini station username with -u or EIRINI_STATION_USERNAME${normal}"
      echo
      echo "$USAGE"
      exit 1
    fi
    username="$EIRINI_STATION_USERNAME"
  fi

  local station_host station_user
  station_user="$(echo $station_address | awk -F '@' '{print $1}')"
  station_host="$(echo $station_address | awk -F '@' '{print $2}')"
  connect "$station_user" "$station_host" "$username" "$ssh_port"
}

main "$@"
